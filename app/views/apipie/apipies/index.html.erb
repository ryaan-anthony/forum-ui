<ul class='breadcrumb'>
  <li class='active'><a href='<%= @doc[:doc_url] %><%= @doc[:link_extension] %>'><%= @doc[:name] %> <%= @doc[:resources].values.first && @doc[:resources].values.first[:version] %></a></li>
  <%= render(:partial => "languages", :locals => {:doc_url => @doc[:doc_url]}) %>
  <% if @versions && @versions.size > 1 %>
  <li class='pull-right'>
    <%= @versions.collect { |v| link_to v, Apipie.full_url(v+@doc[:link_extension]) }.join(' / ').html_safe %>
  </li>
  <% end %>
</ul>

<div><%= raw @doc[:info] %></div>

<% @doc[:resources].sort_by(&:first).each do |key, api| %>
  <table class='table'>
    <tbody>
      <% api[:methods].each do |m| %>
        <tr>
          <td>
            <% if !m[:show] %>
                <% next %>
            <% end %>
            <div>
              <% m[:apis].each do |api| %>
                  <h2>
                    <a href='#description-<%= m[:name] %>'
                       class='accordion-toggle'
                       data-toggle='collapse'
                       data-parent='#accordion'>
                      <%= api[:http_method] %> <%= api[:api_url] %>
                    </a>
                    <% if api[:deprecated] %>
                        <code>DEPRECATED</code>
                    <% end %>
                    <br>
                    <small><%= raw api[:short_description] %></small>
                  </h2>
              <% end %>
            </div>

            <% unless m[:see].empty? %>
                Also see <%= m[:see].map { |s| link_to(s[:description], "#{s[:link]}#{@doc[:link_extension]}") }.to_sentence.html_safe %>.
            <% end %>

            <div id='description-<%= m[:name] %>' class='collapse accordion-body'>
              <%= render(:partial => "method_detail", :locals => {:method => m, :h_level => 3}) %>
            </div>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
<% end %>

